
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
entity sine_lut is
     Port
          (
             clk        : in     STD_LOGIC;
             rst        : in     STD_LOGIC;
             period     : in integer; 
             sine       : out STD_LOGIC_VECTOR(15 downto 0)
         );
end entity;
architecture Behavioral of sine_lut is
type LUT_TYPE is array (0 to 499) of integer;
constant LUT : LUT_TYPE :=
 (32765, 
32971,33178,33384,33590,33796,34002,34209,34415,34621,34826,35032,35238,35444,35649,35855,36060,36265,36470,36675,36880, 
37084,37289,37493,37697,37901,38104,38308,38511,38714,38917,39119,39322,39524,39725,39927,40128,40329,40529,40729,40929, 
41129,41328,41527,41726,41924,42122,42319,42517,42713,42910,43106,43301,43496,43691,43885,44079,44272,44465,44658,44850, 
45041,45232,45423,45613,45802,45991,46180,46368,46555,46742,46928,47114,47299,47484,47668,47851,48034,48216,48398,48579, 
48759,48939,49118,49296,49474,49651,49828,50003,50179,50353,50527,50700,50872,51044,51214,51384,51554,51722,51890,52057, 
52224,52389,52554,52718,52881,53044,53205,53366,53526,53685,53844,54001,54158,54314,54469,54623,54776,54928,55080,55231, 
55380,55529,55677,55824,55970,56115,56260,56403,56545,56687,56827,56967,57105,57243,57380,57515,57650,57784,57916,58048, 
58179,58308,58437,58565,58691,58817,58942,59065,59188,59309,59430,59549,59667,59784,59901,60016,60130,60243,60354,60465, 
60575,60683,60791,60897,61002,61106,61209,61311,61412,61511,61610,61707,61803,61898,61992,62085,62176,62266,62356,62444, 
62530,62616,62701,62784,62866,62947,63026,63105,63182,63258,63333,63407,63479,63551,63621,63689,63757,63823,63888,63952, 
64015,64076,64136,64195,64253,64309,64365,64418,64471,64523,64573,64622,64669,64716,64761,64804,64847,64888,64928,64967, 
65004,65041,65076,65109,65141,65173,65202,65231,65258,65284,65309,65332,65354,65375,65394,65412,65429,65445,65459,65472, 
65484,65494,65503,65511,65517,65523,65526,65529,65535,65535,65529,65526,65523,65517,65511,65503,65494,65484,65472,65459, 
65445,65429,65412,65394,65375,65354,65332,65309,65284,65258,65231,65202,65173,65141,65109,65076,65041,65004,64967,64928, 
64888,64847,64804,64761,64716,64669,64622,64573,64523,64471,64418,64365,64309,64253,64195,64136,64076,64015,63952,63888, 
63823,63757,63689,63621,63551,63479,63407,63333,63258,63182,63105,63026,62947,62866,62784,62701,62616,62530,62444,62356, 
62266,62176,62085,61992,61898,61803,61707,61610,61511,61412,61311,61209,61106,61002,60897,60791,60683,60575,60465,60354, 
60243,60130,60016,59901,59784,59667,59549,59430,59309,59188,59065,58942,58817,58691,58565,58437,58308,58179,58048,57916, 
57784,57650,57515,57380,57243,57105,56967,56827,56687,56545,56403,56260,56115,55970,55824,55677,55529,55380,55231,55080, 
54928,54776,54623,54469,54314,54158,54001,53844,53685,53526,53366,53205,53044,52881,52718,52554,52389,52224,52057,51890, 
51722,51554,51384,51214,51044,50872,50700,50527,50353,50179,50003,49828,49651,49474,49296,49118,48939,48759,48579,48398, 
48216,48034,47851,47668,47484,47299,47114,46928,46742,46555,46368,46180,45991,45802,45613,45423,45232,45041,44850,44658, 
44465,44272,44079,43885,43691,43496,43301,43106,42910,42713,42517,42319,42122,41924,41726,41527,41328,41129,40929,40729, 
40529,40329,40128,39927,39725,39524,39322,39119,38917,38714,38511,38308,38104,37901,37697,37493,37289,37084,36880,36675, 
36470,36265,36060,35855,35649,35444,35238,35032,34826,34621,34415,34209,34002,33796,33590,33384,33178,32971,32765
     );

 signal lut_sig: unsigned(15 downto 0);

     signal state: std_logic;
     
begin
 
  sine <= std_logic_vector (lut_sig) when state = '0' else
  std_logic_vector(65535-lut_sig); 
process(clk,rst) is
variable cnt : integer range 0 to 500;
variable cnt_1ms : integer ;
begin
if rst = '0' then
        cnt:= 0;
        cnt_1ms:= 0;
        state <= '0';
        
lut_sig <= (others=>'0');
elsif rising_edge(clk) then

    if cnt < 500 then
        lut_sig <= to_unsigned(LUT(cnt),16);
    end if;
        if cnt > 498 then
             cnt := 0;
             state <= not state;
             else
        if cnt_1ms =period then
            cnt_1ms := 0;
            cnt := cnt + 1;
        else
            cnt_1ms := cnt_1ms +1;
 
end if;
end if;





end if;



      

end process;
end behavioral;

